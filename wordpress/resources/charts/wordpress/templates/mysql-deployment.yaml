apiVersion: v1
kind: Service
metadata:
  name: wordpress-mysql
  namespace: {{.Values.wordpressNamespace}}
  labels:
    app: wordpress
spec:
  ports:
    - port: 3306
  selector:
    app: wordpress
    tier: mysql
  clusterIP: None
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim3
  namespace: {{.Values.wordpressNamespace}}
  labels:
    app: wordpress
spec:
  storageClassName: {{.Values.storageClassType}}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{.Values.wordpressStorageSize}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress-mysql
  namespace: {{.Values.wordpressNamespace}}
  labels:
    app: wordpress
spec:
  selector:
    matchLabels:
      app: wordpress
      tier: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
        tier: mysql
    spec:
      containers:
      - image: {{.Values.registry}}mysql:{{.Values.mysqlTag}}
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim3
      nodeSelector:
        db: "true" # runs on a node designated as a db 

